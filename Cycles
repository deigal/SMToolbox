--Set cycle boundaries
--Apply Expression
{
  "program": [
    "copyInputRecord()",
    "epoch = DateTime.unixEpoch()",
    "ms = duration(epoch, getInput('timestamp'))",
    "counter = ms - (ms % 30000)",
    "setOutput('counter', counter)"
  ]
}

--Lookahead
{
  "partition_by": [
    "machine"
  ],
  "fields": [
    {
      "from_field": "counter",
      "to_field": "next_counter"
    }
  ]
}

--Apply Expression to signal cycle end
{
"program": [
"copyInputRecord()",
"counter = getInput('counter')",
"next_counter = getInput('next_counter')",
"cycle_end = if (counter != next_counter) { true } else { false }",
"setOutput('cycle_end', cycle_end)"
]
}
